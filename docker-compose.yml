version: '3'

services:
  sublime_postgres:
    image: postgres:13.2
    restart: unless-stopped
    container_name: sublime_postgres
    environment:
      POSTGRES_USER: sublime
      POSTGRES_DB: mantis
      PGDATA: /data/postgres
    env_file: sublime.env
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - net
  sublime_dashboard:
    image: sublimesec/dashboard:1.1
    restart: unless-stopped
    container_name: sublime_dashboard
    ports:
      - "0.0.0.0:3000:80"
    networks:
      - net
    env_file: sublime.env
  sublime_redis:
    image: redis:6.2
    restart: unless-stopped
    container_name: sublime_redis
    command: redis-server --loglevel warning
    ports:
      - "6379:6379"
    networks:
      - net
  sublime_strelka_frontend:
    image: sublimesec/strelka-frontend:0.3
    restart: unless-stopped
    command: strelka-frontend
    ports:
      - "57314:57314"
    networks:
      - net
    volumes:
      - ./configs/frontend/:/etc/strelka/:ro
      - logs:/var/log/strelka/
    container_name: sublime_strelka_frontend_1
    depends_on:
      - sublime_strelka_coordinator
  sublime_strelka_backend:
    image: sublimesec/strelka-backend:0.3
    restart: unless-stopped
    command: strelka-backend
    shm_size: 512mb
    networks:
      - net
    volumes:
      - ./configs/backend/:/etc/strelka/:ro
    container_name: sublime_strelka_backend_1
    depends_on:
      - sublime_strelka_coordinator
  sublime_strelka_manager:
    image: sublimesec/strelka-manager:0.3
    restart: unless-stopped
    command: strelka-manager
    container_name: sublime_strelka_manager_1
    networks:
      - net
    volumes:
      - ./configs/manager/:/etc/strelka/:ro
    depends_on:
      - sublime_strelka_coordinator
  sublime_strelka_coordinator:
    image: redis:alpine
    restart: unless-stopped
    command: redis-server --save "" --appendonly no
    container_name: sublime_strelka_coordinator_1
    networks:
      - net
  sublime_screenshot_service:
    image: sublimesec/render-email-html:0.1
    restart: unless-stopped
    ports:
      - "8100:8100"
    environment:
      - S3_ENDPOINT=http://sublimes3:8110
      - SCREENSHOT_BUCKET=email-screenshots
      - AWS_REGION=us-east-1
      - DISABLE_DD=true
    container_name: sublime_screenshot_service
    env_file: sublime.env
    networks:
      - net
    depends_on:
      - sublime_create_buckets
  # Keep this name as sublimes3 because underscores don't play nice with certain endpoint validation
  sublimes3:
    container_name: sublimes3
    image: minio/minio
    restart: unless-stopped
    networks:
      - net
    ports:
      - "8110:8110"
    volumes:
      - s3_data:/data
    env_file: sublime.env
    entrypoint: >
      /bin/sh -c "
      export MINIO_ROOT_USER=$$AWS_ACCESS_KEY_ID;
      export MINIO_ROOT_PASSWORD=$$AWS_SECRET_ACCESS_KEY;
      minio server --address 0.0.0.0:8110 --console-address 0.0.0.0:8111  /data;
      "
  sublime_create_buckets:
    image: minio/mc
    depends_on:
      - sublimes3
    networks:
      - net
    env_file: sublime.env
    entrypoint: >
      /bin/sh -c "
      sleep 15;
      /usr/bin/mc config host add myminio http://sublimes3:8110 $$AWS_ACCESS_KEY_ID $$AWS_SECRET_ACCESS_KEY;
      /usr/bin/mc mb myminio/email-screenshots;
      /usr/bin/mc mb myminio/events;
      /usr/bin/mc mb myminio/message-storage;
      /usr/bin/mc ls myminio;
      exit 0;
      "
  sublime_hydra:
    image: sublimesec/hydra-cpu:1.0
    restart: unless-stopped
    ports:
      - "8200:8200"
    networks:
      - net
    container_name: sublime_hydra

networks:
  net:
    driver: bridge

volumes:
  postgres:
  logs:
  s3_data:
